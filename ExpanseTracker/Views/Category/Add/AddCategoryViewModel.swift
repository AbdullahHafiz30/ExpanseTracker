//
//  AddCategoryViewModel.swift
//  ExpanseTracker
//
//  Created by Rayaheen Mseri on 18/10/1446 AH.
//

import SwiftUI
import CoreData
import Combine

class AddCategoryViewModel: ObservableObject {
    private let context = PersistanceController.shared.context
    
    func saveCategoryToCoreData(category: Category, userId: String) {
        print("save category to core data")
        
        // Create a fetch request to find the user by id
        let userRequest: NSFetchRequest<UserEntity> = UserEntity.fetchRequest()
        // Filter the results
        userRequest.predicate = NSPredicate(format: "id == %@", userId)
        userRequest.fetchLimit = 1
        do{
            // Fetch the first user that matches the predicate
            if let existingUserEntity = try context.fetch(userRequest).first {
                
                // Create a new CategoryEntity instance in the context
                let newCategory = CategoryEntity(context: context)
                newCategory.id = category.id
                newCategory.name = category.name
                newCategory.color = category.color
                newCategory.icon = category.icon
                newCategory.categoryType = category.categoryType?.rawValue
                newCategory.budgetLimit = category.budgetLimit ?? 0.0
                
                // Add the new category to the user list of categories
                // addToCategory is a method automatically generated by Core Data for the one-to-many relationship between UserEntity and CategoryEntity
                existingUserEntity.addToCategory(newCategory)
                print("✅ Added new category for the user.")
                
                PersistanceController.shared.saveContext()
            }
            else {
                print("No user found with id: \(userId)")
            }
        }catch {
            print("❌ Failed to save context: \(error)")
        }
    }
}
